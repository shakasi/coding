//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5485 版自动生成。
// 
#pragma warning disable 1591

namespace GloryTP.WebReference8843 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;

    public class MyHeader : System.Web.Services.Protocols.SoapHeader
    {
        public string Username; //= "12650000238BF747AD";
        public string Password;//= "70947EFA9D77E413502C24B0DD252F66";
        public MyHeader()
        {
            Username = "";
            Password = "";
        }
    }   
    
    /// <remarks/>
    // CODEGEN: 未处理命名空间“http://www.w3.org/ns/ws-policy”中的可选 WSDL 扩展元素“PolicyReference”。
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TPLCashierMediaWebServiceSoap11Binding", Namespace="http://cashiermedia.webapp.tplinux.wincor_nixdorf.com")]
    public partial class TPLCashierMediaWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCashierMediaXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TPLCashierMediaWebService() {
            this.Url = global::GloryTP.Properties.Settings.Default.GloryTP_WebReference8843_TPLCashierMediaWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCashierMediaXMLCompletedEventHandler getCashierMediaXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCashierMediaXML", RequestElementName="tplCashierMediaXML", RequestNamespace="http://cashiermedia.webapp.tplinux.wincor_nixdorf.com", ResponseElementName="tplCashierMediaXMLResponse", ResponseNamespace="http://cashiermedia.webapp.tplinux.wincor_nixdorf.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("rtnCode", IsNullable=true)]
        public string getCashierMediaXML(
                    ref string operation, 
                    ref string empNmbr, 
                    ref string businessDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string rtnMessage, 
                    out string cashID, 
                    out string cashCount, 
                    out string cashAmount, 
                    out string chequeID, 
                    out string chequeCount, 
                    out string chequeAmount, 
                    out string ACSID, 
                    out string ACSCount, 
                    out string ACSAmount, 
                    out string onlinePaymentID, 
                    out string onlinePaymentCount, 
                    out string onlinePaymentAmount, 
                    out string offlinePaymentID, 
                    out string offlinePaymentCount, 
                    out string offlinePaymentAmount) {
            object[] results = this.Invoke("getCashierMediaXML", new object[] {
                        operation,
                        empNmbr,
                        businessDate});
            operation = ((string)(results[1]));
            empNmbr = ((string)(results[2]));
            businessDate = ((string)(results[3]));
            rtnMessage = ((string)(results[4]));
            cashID = ((string)(results[5]));
            cashCount = ((string)(results[6]));
            cashAmount = ((string)(results[7]));
            chequeID = ((string)(results[8]));
            chequeCount = ((string)(results[9]));
            chequeAmount = ((string)(results[10]));
            ACSID = ((string)(results[11]));
            ACSCount = ((string)(results[12]));
            ACSAmount = ((string)(results[13]));
            onlinePaymentID = ((string)(results[14]));
            onlinePaymentCount = ((string)(results[15]));
            onlinePaymentAmount = ((string)(results[16]));
            offlinePaymentID = ((string)(results[17]));
            offlinePaymentCount = ((string)(results[18]));
            offlinePaymentAmount = ((string)(results[19]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCashierMediaXMLAsync(string operation, string empNmbr, string businessDate) {
            this.getCashierMediaXMLAsync(operation, empNmbr, businessDate, null);
        }
        
        /// <remarks/>
        public void getCashierMediaXMLAsync(string operation, string empNmbr, string businessDate, object userState) {
            if ((this.getCashierMediaXMLOperationCompleted == null)) {
                this.getCashierMediaXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCashierMediaXMLOperationCompleted);
            }
            this.InvokeAsync("getCashierMediaXML", new object[] {
                        operation,
                        empNmbr,
                        businessDate}, this.getCashierMediaXMLOperationCompleted, userState);
        }
        
        private void OngetCashierMediaXMLOperationCompleted(object arg) {
            if ((this.getCashierMediaXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCashierMediaXMLCompleted(this, new getCashierMediaXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getCashierMediaXMLCompletedEventHandler(object sender, getCashierMediaXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCashierMediaXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCashierMediaXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string operation {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string empNmbr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string businessDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string rtnMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string cashID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string cashCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string cashAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string chequeID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string chequeCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string chequeAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string ACSID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string ACSCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string ACSAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public string onlinePaymentID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public string onlinePaymentCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public string onlinePaymentAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[16]));
            }
        }
        
        /// <remarks/>
        public string offlinePaymentID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[17]));
            }
        }
        
        /// <remarks/>
        public string offlinePaymentCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public string offlinePaymentAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[19]));
            }
        }
    }
}

#pragma warning restore 1591