// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitOfWork;

namespace UnitOfWork.Infrastructure.Migrations
{
    [DbContext(typeof(UnitOfWorkDbContext))]
    [Migration("20210203061036_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("UnitOfWork.Customer.ContactAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactRealName")
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("UnitOfWork.Customer.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("UnitOfWork.Goods.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodsCategoryId");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("UnitOfWork.Goods.GoodsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GoodsCategories");
                });

            modelBuilder.Entity("UnitOfWork.ShoppingCart.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("UnitOfWork.ShoppingCart.ShoppingCartLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartLines");
                });

            modelBuilder.Entity("UnitOfWork.Customer.ContactAddress", b =>
                {
                    b.HasOne("UnitOfWork.Customer.Customer", null)
                        .WithMany("ShippingAddresses")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("UnitOfWork.Goods.Goods", b =>
                {
                    b.HasOne("UnitOfWork.Goods.GoodsCategory", "GoodsCategory")
                        .WithMany("GoodsList")
                        .HasForeignKey("GoodsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsCategory");
                });

            modelBuilder.Entity("UnitOfWork.ShoppingCart.ShoppingCart", b =>
                {
                    b.HasOne("UnitOfWork.Customer.Customer", "Customer")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("UnitOfWork.ShoppingCart.ShoppingCart", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("UnitOfWork.ShoppingCart.ShoppingCartLine", b =>
                {
                    b.HasOne("UnitOfWork.Goods.Goods", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnitOfWork.ShoppingCart.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartLines")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("UnitOfWork.Customer.Customer", b =>
                {
                    b.Navigation("ShippingAddresses");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("UnitOfWork.Goods.GoodsCategory", b =>
                {
                    b.Navigation("GoodsList");
                });

            modelBuilder.Entity("UnitOfWork.ShoppingCart.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartLines");
                });
#pragma warning restore 612, 618
        }
    }
}
